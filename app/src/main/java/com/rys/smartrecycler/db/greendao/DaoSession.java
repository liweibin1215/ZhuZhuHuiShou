package com.rys.smartrecycler.db.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.rys.smartrecycler.db.retbean.AdminOrder;
import com.rys.smartrecycler.db.retbean.AdvInfo;
import com.rys.smartrecycler.db.retbean.DeskConfigBean;
import com.rys.smartrecycler.db.retbean.DeviceInfo;
import com.rys.smartrecycler.db.retbean.FinishLogBean;
import com.rys.smartrecycler.db.retbean.LogBean;
import com.rys.smartrecycler.db.retbean.SystemSetBean;
import com.rys.smartrecycler.db.retbean.UserOrder;

import com.rys.smartrecycler.db.greendao.AdminOrderDao;
import com.rys.smartrecycler.db.greendao.AdvInfoDao;
import com.rys.smartrecycler.db.greendao.DeskConfigBeanDao;
import com.rys.smartrecycler.db.greendao.DeviceInfoDao;
import com.rys.smartrecycler.db.greendao.FinishLogBeanDao;
import com.rys.smartrecycler.db.greendao.LogBeanDao;
import com.rys.smartrecycler.db.greendao.SystemSetBeanDao;
import com.rys.smartrecycler.db.greendao.UserOrderDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig adminOrderDaoConfig;
    private final DaoConfig advInfoDaoConfig;
    private final DaoConfig deskConfigBeanDaoConfig;
    private final DaoConfig deviceInfoDaoConfig;
    private final DaoConfig finishLogBeanDaoConfig;
    private final DaoConfig logBeanDaoConfig;
    private final DaoConfig systemSetBeanDaoConfig;
    private final DaoConfig userOrderDaoConfig;

    private final AdminOrderDao adminOrderDao;
    private final AdvInfoDao advInfoDao;
    private final DeskConfigBeanDao deskConfigBeanDao;
    private final DeviceInfoDao deviceInfoDao;
    private final FinishLogBeanDao finishLogBeanDao;
    private final LogBeanDao logBeanDao;
    private final SystemSetBeanDao systemSetBeanDao;
    private final UserOrderDao userOrderDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        adminOrderDaoConfig = daoConfigMap.get(AdminOrderDao.class).clone();
        adminOrderDaoConfig.initIdentityScope(type);

        advInfoDaoConfig = daoConfigMap.get(AdvInfoDao.class).clone();
        advInfoDaoConfig.initIdentityScope(type);

        deskConfigBeanDaoConfig = daoConfigMap.get(DeskConfigBeanDao.class).clone();
        deskConfigBeanDaoConfig.initIdentityScope(type);

        deviceInfoDaoConfig = daoConfigMap.get(DeviceInfoDao.class).clone();
        deviceInfoDaoConfig.initIdentityScope(type);

        finishLogBeanDaoConfig = daoConfigMap.get(FinishLogBeanDao.class).clone();
        finishLogBeanDaoConfig.initIdentityScope(type);

        logBeanDaoConfig = daoConfigMap.get(LogBeanDao.class).clone();
        logBeanDaoConfig.initIdentityScope(type);

        systemSetBeanDaoConfig = daoConfigMap.get(SystemSetBeanDao.class).clone();
        systemSetBeanDaoConfig.initIdentityScope(type);

        userOrderDaoConfig = daoConfigMap.get(UserOrderDao.class).clone();
        userOrderDaoConfig.initIdentityScope(type);

        adminOrderDao = new AdminOrderDao(adminOrderDaoConfig, this);
        advInfoDao = new AdvInfoDao(advInfoDaoConfig, this);
        deskConfigBeanDao = new DeskConfigBeanDao(deskConfigBeanDaoConfig, this);
        deviceInfoDao = new DeviceInfoDao(deviceInfoDaoConfig, this);
        finishLogBeanDao = new FinishLogBeanDao(finishLogBeanDaoConfig, this);
        logBeanDao = new LogBeanDao(logBeanDaoConfig, this);
        systemSetBeanDao = new SystemSetBeanDao(systemSetBeanDaoConfig, this);
        userOrderDao = new UserOrderDao(userOrderDaoConfig, this);

        registerDao(AdminOrder.class, adminOrderDao);
        registerDao(AdvInfo.class, advInfoDao);
        registerDao(DeskConfigBean.class, deskConfigBeanDao);
        registerDao(DeviceInfo.class, deviceInfoDao);
        registerDao(FinishLogBean.class, finishLogBeanDao);
        registerDao(LogBean.class, logBeanDao);
        registerDao(SystemSetBean.class, systemSetBeanDao);
        registerDao(UserOrder.class, userOrderDao);
    }
    
    public void clear() {
        adminOrderDaoConfig.clearIdentityScope();
        advInfoDaoConfig.clearIdentityScope();
        deskConfigBeanDaoConfig.clearIdentityScope();
        deviceInfoDaoConfig.clearIdentityScope();
        finishLogBeanDaoConfig.clearIdentityScope();
        logBeanDaoConfig.clearIdentityScope();
        systemSetBeanDaoConfig.clearIdentityScope();
        userOrderDaoConfig.clearIdentityScope();
    }

    public AdminOrderDao getAdminOrderDao() {
        return adminOrderDao;
    }

    public AdvInfoDao getAdvInfoDao() {
        return advInfoDao;
    }

    public DeskConfigBeanDao getDeskConfigBeanDao() {
        return deskConfigBeanDao;
    }

    public DeviceInfoDao getDeviceInfoDao() {
        return deviceInfoDao;
    }

    public FinishLogBeanDao getFinishLogBeanDao() {
        return finishLogBeanDao;
    }

    public LogBeanDao getLogBeanDao() {
        return logBeanDao;
    }

    public SystemSetBeanDao getSystemSetBeanDao() {
        return systemSetBeanDao;
    }

    public UserOrderDao getUserOrderDao() {
        return userOrderDao;
    }

}
